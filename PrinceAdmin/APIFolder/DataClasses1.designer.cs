#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PrinceAdmin.APIFolder
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PrinceAdminDB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRegister(Register instance);
    partial void UpdateRegister(Register instance);
    partial void DeleteRegister(Register instance);
    partial void InsertReel(Reel instance);
    partial void UpdateReel(Reel instance);
    partial void DeleteReel(Reel instance);
    partial void InsertNmessage(Nmessage instance);
    partial void UpdateNmessage(Nmessage instance);
    partial void DeleteNmessage(Nmessage instance);
    partial void InsertCoin(Coin instance);
    partial void UpdateCoin(Coin instance);
    partial void DeleteCoin(Coin instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Register> Registers
		{
			get
			{
				return this.GetTable<Register>();
			}
		}
		
		public System.Data.Linq.Table<Reel> Reels
		{
			get
			{
				return this.GetTable<Reel>();
			}
		}
		
		public System.Data.Linq.Table<Nmessage> Nmessages
		{
			get
			{
				return this.GetTable<Nmessage>();
			}
		}
		
		public System.Data.Linq.Table<Coin> Coins
		{
			get
			{
				return this.GetTable<Coin>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCoins")]
		public int InsertCoins([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rupees", DbType="VarChar(100)")] string rupees, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coins", DbType="VarChar(100)")] string coins)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rupees, coins);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserRegistration")]
		public int UserRegistration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Firstname", DbType="VarChar(100)")] string firstname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lastname", DbType="VarChar(100)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Emailid", DbType="VarChar(100)")] string emailid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(100)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstname, lastname, emailid, phone, city);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Loginproc")]
		public ISingleResult<LoginprocResult> Loginproc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(100)")] string phone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), phone);
			return ((ISingleResult<LoginprocResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertReels")]
		public int InsertReels([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Uprofile", DbType="VarChar(100)")] string uprofile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Video", DbType="VarChar(MAX)")] string video, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tags", DbType="VarChar(100)")] string tags, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Hashtags", DbType="VarChar(100)")] string hashtags, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(100)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Creator", DbType="VarChar(100)")] string creator)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), uprofile, video, tags, hashtags, description, creator);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertNmessage")]
		public int InsertNmessage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Messagetitle", DbType="VarChar(MAX)")] string messagetitle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Message", DbType="VarChar(MAX)")] string message)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), messagetitle, message);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditRegister")]
		public int EditRegister([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Firstname", DbType="VarChar(100)")] string firstname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Lastname", DbType="VarChar(100)")] string lastname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Emailid", DbType="VarChar(100)")] string emailid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(100)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, firstname, lastname, emailid, phone, city);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditReels")]
		public int EditReels([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Uprofile", DbType="VarChar(100)")] string uprofile, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Video", DbType="VarChar(MAX)")] string video, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tags", DbType="VarChar(100)")] string tags, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Hashtags", DbType="VarChar(100)")] string hashtags, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(100)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Creator", DbType="VarChar(100)")] string creator)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, uprofile, video, tags, hashtags, description, creator);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetRegisterById")]
		public ISingleResult<GetRegisterByIdResult> GetRegisterById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<GetRegisterByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteReels")]
		public int DeleteReels([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deleteregistration")]
		public int Deleteregistration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMessage")]
		public int DeleteMessage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCoins")]
		public int UpdateCoins([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Rupees", DbType="VarChar(100)")] string rupees, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Coins", DbType="VarChar(100)")] string coins)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, rupees, coins);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteCoins")]
		public int DeleteCoins([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBankDetails")]
		public int DeleteBankDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBankDetailsById")]
		public ISingleResult<GetBankDetailsByIdResult> GetBankDetailsById([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<GetBankDetailsByIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBankDetails")]
		public int UpdateBankDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Holdername", DbType="VarChar(100)")] string holdername, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNo", DbType="VarChar(200)")] string accountNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="VarChar(100)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IFSC", DbType="VarChar(100)")] string iFSC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(100)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DOB", DbType="VarChar(100)")] string dOB)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, holdername, accountNo, branch, iFSC, city, bankName, dOB);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBankDetails")]
		public int InsertBankDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Holdername", DbType="VarChar(100)")] string holdername, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNo", DbType="VarChar(200)")] string accountNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Branch", DbType="VarChar(100)")] string branch, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IFSC", DbType="VarChar(100)")] string iFSC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankName", DbType="VarChar(100)")] string bankName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DOB", DbType="VarChar(100)")] string dOB)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), holdername, accountNo, branch, iFSC, city, bankName, dOB);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Register")]
	public partial class Register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Emailid;
		
		private string _Phone;
		
		private string _City;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnEmailidChanging(string value);
    partial void OnEmailidChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public Register()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(100)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(100)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emailid", DbType="VarChar(100)")]
		public string Emailid
		{
			get
			{
				return this._Emailid;
			}
			set
			{
				if ((this._Emailid != value))
				{
					this.OnEmailidChanging(value);
					this.SendPropertyChanging();
					this._Emailid = value;
					this.SendPropertyChanged("Emailid");
					this.OnEmailidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reels")]
	public partial class Reel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Uprofile;
		
		private string _Video;
		
		private string _Tags;
		
		private string _Hastage;
		
		private string _Description;
		
		private string _Creater;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUprofileChanging(string value);
    partial void OnUprofileChanged();
    partial void OnVideoChanging(string value);
    partial void OnVideoChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnHastageChanging(string value);
    partial void OnHastageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreaterChanging(string value);
    partial void OnCreaterChanged();
    #endregion
		
		public Reel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uprofile", DbType="VarChar(100)")]
		public string Uprofile
		{
			get
			{
				return this._Uprofile;
			}
			set
			{
				if ((this._Uprofile != value))
				{
					this.OnUprofileChanging(value);
					this.SendPropertyChanging();
					this._Uprofile = value;
					this.SendPropertyChanged("Uprofile");
					this.OnUprofileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Video", DbType="VarChar(MAX)")]
		public string Video
		{
			get
			{
				return this._Video;
			}
			set
			{
				if ((this._Video != value))
				{
					this.OnVideoChanging(value);
					this.SendPropertyChanging();
					this._Video = value;
					this.SendPropertyChanged("Video");
					this.OnVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(100)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hastage", DbType="VarChar(100)")]
		public string Hastage
		{
			get
			{
				return this._Hastage;
			}
			set
			{
				if ((this._Hastage != value))
				{
					this.OnHastageChanging(value);
					this.SendPropertyChanging();
					this._Hastage = value;
					this.SendPropertyChanged("Hastage");
					this.OnHastageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creater", DbType="VarChar(100)")]
		public string Creater
		{
			get
			{
				return this._Creater;
			}
			set
			{
				if ((this._Creater != value))
				{
					this.OnCreaterChanging(value);
					this.SendPropertyChanging();
					this._Creater = value;
					this.SendPropertyChanged("Creater");
					this.OnCreaterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nmessage")]
	public partial class Nmessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Messagetitle;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMessagetitleChanging(string value);
    partial void OnMessagetitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public Nmessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Messagetitle", DbType="VarChar(MAX)")]
		public string Messagetitle
		{
			get
			{
				return this._Messagetitle;
			}
			set
			{
				if ((this._Messagetitle != value))
				{
					this.OnMessagetitleChanging(value);
					this.SendPropertyChanging();
					this._Messagetitle = value;
					this.SendPropertyChanged("Messagetitle");
					this.OnMessagetitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coins")]
	public partial class Coin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Rupees;
		
		private string _coins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnRupeesChanging(string value);
    partial void OnRupeesChanged();
    partial void OncoinsChanging(string value);
    partial void OncoinsChanged();
    #endregion
		
		public Coin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rupees", DbType="VarChar(100)")]
		public string Rupees
		{
			get
			{
				return this._Rupees;
			}
			set
			{
				if ((this._Rupees != value))
				{
					this.OnRupeesChanging(value);
					this.SendPropertyChanging();
					this._Rupees = value;
					this.SendPropertyChanged("Rupees");
					this.OnRupeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coins", DbType="VarChar(100)")]
		public string coins
		{
			get
			{
				return this._coins;
			}
			set
			{
				if ((this._coins != value))
				{
					this.OncoinsChanging(value);
					this.SendPropertyChanging();
					this._coins = value;
					this.SendPropertyChanged("coins");
					this.OncoinsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class LoginprocResult
	{
		
		private System.Nullable<int> _Column1;
		
		public LoginprocResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class GetRegisterByIdResult
	{
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Emailid;
		
		private string _Phone;
		
		private string _City;
		
		public GetRegisterByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(100)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(100)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emailid", DbType="VarChar(100)")]
		public string Emailid
		{
			get
			{
				return this._Emailid;
			}
			set
			{
				if ((this._Emailid != value))
				{
					this._Emailid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
	}
	
	public partial class GetBankDetailsByIdResult
	{
		
		private string _Holdername;
		
		private string _AccountNo;
		
		private string _Branch;
		
		private string _IFSC;
		
		private string _city;
		
		private string _BankName;
		
		private string _DOB;
		
		public GetBankDetailsByIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Holdername", DbType="VarChar(100)")]
		public string Holdername
		{
			get
			{
				return this._Holdername;
			}
			set
			{
				if ((this._Holdername != value))
				{
					this._Holdername = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="VarChar(200)")]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this._AccountNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(100)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this._Branch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFSC", DbType="VarChar(100)")]
		public string IFSC
		{
			get
			{
				return this._IFSC;
			}
			set
			{
				if ((this._IFSC != value))
				{
					this._IFSC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(100)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this._city = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(100)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this._BankName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="VarChar(100)")]
		public string DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this._DOB = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
